@layout PrintLayout
@page "/khrpr/{KtID:int}"

@inject IDataAccess db
@inject MyAppState MyAppState

<p>
		@((MarkupString)customHTML)
</p>

@code {
		[Parameter]
		public int KtID { get; set; }
		protected int DtID;

		string customHTML = "<p>This is a <strong>custom HTML</strong> code</p>";

		protected override void OnInitialized()
		{
				//await Task.Delay(1);
				DtID = MyAppState.getUsrID();
		}

		protected override async Task OnParametersSetAsync()
		{
				// Buraya iki sekilde de girildigi icin OnInitialized da yapma
				//await Task.Delay(1);    // Use await Task.Delay(1) or await Task.Yield(); to flush changes
				string sql = $"select * from KH where DtID = {DtID} and KtID = {KtID} order by EXD desc";
				List<KHmodel> data = await db.LoadData<KHmodel, dynamic>(sql, new { });

				KTmodel kt = await db.LoadRec<KTmodel, dynamic>($"select * from KT where KtID = {KtID}", new { });

				System.Text.StringBuilder sb = new();

				int? yas = DateTime.Today.Year - kt.DgmTrh?.Year;

				sb.Append($"<h4><strong>{kt.Ad}</strong> {kt.Sex}/{yas}</h4>");

				foreach (var row in data)
				{
						if (!string.IsNullOrEmpty(row.Info))
						{
								sb.Append("<hr/>");
								sb.Append($"<h5><strong>{row.EXD:dd.MM.yy}</strong></h5>");
								sb.Append("<hr/>");

								sb.Append(row.Info.Trim('\n'));
								sb.Append("<br/>");
								sb.Append("<br/>");
						}
				}

				if (!string.IsNullOrEmpty(kt.Info))
				{
						sb.Append("<hr/>");
						sb.Append("<h5><strong>Kişi Genel Bilgileri</strong></h5>");
						sb.Append("<hr/>");

						sb.Append(kt.Info.Trim('\n'));
						sb.Append("<br/>");
						sb.Append("<br/>");
				}

				sb.Replace("\n", "<br/>");

				customHTML = sb.ToString();

				// Skl=Hareket olanlar
				//TtData = await db.LoadData<TTmodel, dynamic>($"select * from TT where DtID = {DtID} and Skl = 'H'", new { });

				//TgData = await db.LoadData<TGmodel, dynamic>($"select * from TG where DtID = {DtID} and Skl = 'H' order by Ad", new { });

				//ktRec = await db.LoadRec<KTmodel, dynamic>("select Ad from KT where KtID = @KtID", new { KtID = KtID });
				////await InvokeAsync(StateHasChanged);
		}
}